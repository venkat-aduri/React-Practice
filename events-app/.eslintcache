[{"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\index.tsx":"1","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\reportWebVitals.ts":"2","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\App.tsx":"3","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\Events.tsx":"4","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\GetEx.tsx":"5"},{"size":531,"mtime":1608115577499,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1608100631485,"results":"8","hashOfConfig":"7"},{"size":225,"mtime":1608102202680,"results":"9","hashOfConfig":"7"},{"size":1573,"mtime":1608113559023,"results":"10","hashOfConfig":"7"},{"size":2215,"mtime":1608117803682,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"c07pco",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\index.tsx",["27"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport GetEx from './GetEx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GetEx />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["28","29"],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\reportWebVitals.ts",[],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\App.tsx",["30"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Events from './Events';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Events/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n",["31","32"],"C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\Events.tsx",["33","34"],"// import { Button, Snackbar } from '@material-ui/core';\r\n// import MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n// import React, { useState } from 'react';\r\n\r\n// function Alert(props: AlertProps) {\r\n//     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n//   }\r\n\r\n// function Events() {\r\n\r\n//     const [open, setOpen] = useState(false);\r\n\r\n//     function myFun():void{\r\n//         setOpen(true);\r\n//     }\r\n\r\n//     function handleClose():void{\r\n//         setOpen(false);\r\n//     }\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <Button \r\n//             variant=\"outlined\" \r\n//             color=\"secondary\"\r\n//             onClick={myFun}>ClickMe</Button>\r\n//             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n//                 <Alert onClose={handleClose} severity=\"success\">\r\n//                 This is a success message!\r\n//                 </Alert>\r\n//             </Snackbar>\r\n//         </React.Fragment>\r\n//     );\r\n// }\r\n\r\n// export default Events;\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nfunction Events() {\r\n\r\n    function login(arg1:string, arg2:string):void{\r\n        if(arg1==\"admin\" && arg2==\"admi\"){\r\n            alert(\"Login Success\");\r\n        }else{\r\n            alert(\"Login Fail\");\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Button \r\n            variant=\"outlined\" \r\n            color=\"primary\"\r\n            onClick={()=>{login(\"admin\",\"admin\")}}>Login</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Events;","C:\\Users\\hi\\Desktop\\Samba-AshokIT\\React\\React-Practice\\events-app\\src\\GetEx.tsx",["35"],{"ruleId":"36","severity":1,"message":"37","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":11},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"36","severity":1,"message":"44","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":12},{"ruleId":"40","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":44,"column":16,"nodeType":"49","messageId":"50","endLine":44,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":44,"column":33,"nodeType":"49","messageId":"50","endLine":44,"endColumn":35},{"ruleId":"51","severity":1,"message":"52","line":44,"column":44,"nodeType":"53","endLine":44,"endColumn":92},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'logo' is defined but never used.",["54"],["55"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]